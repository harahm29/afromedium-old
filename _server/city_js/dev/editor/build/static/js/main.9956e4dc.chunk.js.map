{"version":3,"sources":["ObjectUI.js","ImportOBJ.js","ExportScene.js","ResetScene.js","Menu.js","index.js"],"names":["ObjectUI","_ref","_this","mesh","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","state","collapse","changeScale","event","val","target","value","scale","set","userData","changeBuffer","buffer","changeSide","parseInt","side","material","changeShadows","shadows","changeMap","file","files","filename","name","reader","FileReader","img","Image","texture","BABYLON","wrapS","wrapT","onload","needsUpdate","addEventListener","src","result","readAsDataURL","map","console","log","changeAlpha","alphaMap","transparent","alpha","changeLightMap","lightMap","lightmap","changeAlphaTest","alphaTest","changeTransparent","changeColor","color","changeCollider","collider","wireframe","changeWireframe","changeOpacity","opacity","changePosX","pos","position","x","changePosY","z","changePosZ","y","changeRotX","rot","rotation","changeRotY","changeRotZ","wirframe","react_default","a","createElement","Container","Row","Col","Button","onClick","style","marginBottom","Collapse","isOpen","Card","CardBody","Form","FormGroup","Label","for","Input","id","onChange","type","selected","Component","OBJLoader","ColladaLoader","ImportOBJ","scene","extension","split","pop","toLowerCase","contents","collada","parse","i","children","copy","add","ReactDOM","render","src_ObjectUI","key","uuid","document","getElementById","readAsText","object","className","ExportScene","zip","JSZip","locTextures","folder","locGeometry","assets","obj","locations","imgList","data","asset","geo","indexOf","push","image","base64","geometry","fromBufferGeometry","JSON","stringify","toJSON","generateAsync","then","content","saveAs","ResetScene","Menu","importOBJ","importDAE","importDropdownOpen","Navbar","light","expand","NavbarToggler","navbar","Nav","NavItem","NavLink","src_ImportOBJ","src_ExportScene","src_ResetScene","OrbitControls","require","objectGroup","App","onWindowResize","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","mount","appendChild","domElement","vertices","line","animate","requestAnimationFrame","_this2","ref","rootElement","src_App","src_Menu"],"mappings":"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","file":"static/js/main.9956e4dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Collapse, Button, CardBody, Card, Container, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport * as BABYLON from \"babylon\";\n\nclass ObjectUI extends Component {\n  constructor({ mesh }) {\n    super();\n    this.state = {\n      collapse: false,\n      scale: '1',\n      buffer: '1',\n      side: '0',\n      shadows: false,\n      map: null,\n      alpha: null,\n      lightmap: null,\n      alphaTest: '0',\n      transparent: '0',\n      opacity: '1',\n      color: 'ffffff',\n      collider: '0',\n      wirframe: '0',\n      pos: [0, 0, 0],\n      rot: [0, 0, 0]\n    };\n    this.mesh = mesh;\n    this.mesh.userData = {\n      scale: '1',\n      buffer: '1',\n      side: '0',\n      shadows: false,\n      map: null,\n      alpha: null,\n      lightmap: null,\n      alphaTest: '0',\n      transparent: '0',\n      opacity: '1',\n      color: 'ffffff',\n      collider: '0',\n      wirframe: '0',\n      pos: [0, 0, 0],\n      rot: [0, 0, 0]\n    };\n    //this.updateUserData();\n\n\n    //console.log(mesh);\n\n  }\n\n  toggle = () => {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  changeScale = (event) => {\n    //console.log(event.target.value);\n    let val = event.target.value;\n    this.setState(state => ({ scale: val }));\n    this.mesh.scale.set(val, val, val);\n    this.mesh.userData.scale = val;\n    //this.updateUserData();\n\n  }\n\n  changeBuffer = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ buffer: val }));\n    //this.updateUserData();\n    this.mesh.userData.buffer = val;\n  }\n\n  changeSide = (event) => {\n\n    let val = parseInt(event.target.value);\n\n    this.setState(state => ({ side: val }));\n    this.mesh.material.side = val;\n    //this.updateUserData();\n    this.mesh.userData.side = val;\n\n  }\n\n  changeShadows = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ shadows: val }));\n    //this.updateUserData();\n    this.mesh.userData.shadows = val;\n  }\n\n  changeMap = (event) => {\n    \n    var file = event.target.files[0];\n    var filename = file.name;\n    //console.log(file.name);\n    //var extension = filename.split('.').pop().toLowerCase();\n    var reader = new FileReader();\n    let img = new Image();\n    let texture = new BABYLON.Texture(img);\n    texture.wrapS = texture.wrapT = BABYLON.RepeatWrapping; \n\n    img.onload = () => { \n      texture.needsUpdate = true; \n      //console.log(texture);\n    };\n    reader.addEventListener('load', (event) => {\n      img.src = event.target.result;\n\n    }, false);\n    reader.readAsDataURL(file);\n    this.mesh.material.map = texture;\n    this.mesh.material.needsUpdate = true;\n    console.log(file.name);\n    this.setState(state => ({ map: filename }));\n    //this.updateUserData();\n    this.mesh.userData.map = filename;\n    \n  }\n\n  changeAlpha = (event) => {\n    \n    var file = event.target.files[0];\n    var filename = file.name;\n    //console.log(file.name);\n    //var extension = filename.split('.').pop().toLowerCase();\n    var reader = new FileReader();\n    let img = new Image();\n    let texture = new BABYLON.Texture(img);\n    texture.wrapS = texture.wrapT = BABYLON.RepeatWrapping; \n\n    img.onload = () => { \n      texture.needsUpdate = true; \n      //console.log(texture);\n    };\n    reader.addEventListener('load', (event) => {\n      img.src = event.target.result;\n\n    }, false);\n    reader.readAsDataURL(file);\n    this.mesh.material.alphaMap = texture;\n    this.mesh.material.transparent = true;\n    this.mesh.material.needsUpdate = true;\n\n    this.setState(state => ({ alpha: filename }));\n    this.setState(state => ({ transparent: '1' }));\n    //this.updateUserData();\n    this.mesh.userData.alpha = filename;\n    this.mesh.userData.transparent = '1';\n  }\n\n  changeLightMap = (event) => {\n    \n    var file = event.target.files[0];\n    var filename = file.name;\n    //console.log(file.name);\n    //var extension = filename.split('.').pop().toLowerCase();\n    var reader = new FileReader();\n    let img = new Image();\n    let texture = new BABYLON.Texture(img);\n    texture.wrapS = texture.wrapT = BABYLON.RepeatWrapping; \n\n    img.onload = () => { \n      texture.needsUpdate = true; \n      //console.log(texture);\n    };\n    reader.addEventListener('load', (event) => {\n      img.src = event.target.result;\n\n    }, false);\n    reader.readAsDataURL(file);\n    this.mesh.material.lightMap = texture;\n    this.mesh.material.needsUpdate = true;\n\n    this.setState(state => ({ lightMap: filename }));\n    //this.updateUserData();\n    //console.log(this.state);\n    this.mesh.userData.lightmap = filename;\n  }\n\n  changeAlphaTest = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ alphaTest: val }));\n    this.mesh.material.alphaTest = val;\n    //this.updateUserData();\n    this.mesh.userData.alphaTest = val;\n\n  }\n\n  changeTransparent = (event) => {\n    let val = parseInt(event.target.value);\n    this.setState(state => ({ transparent: val }));\n    this.mesh.material.transparent = (val || this.state.alpha) ? true: false;\n    this.mesh.material.needsUpdate = true;\n    //console.log(this.mesh.material.transparent, val,  this.state.alpha, (val || this.state.alpha));\n    //this.updateUserData();\n    this.mesh.userData.transparent = val;\n\n  }\n\n\n  changeColor = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ color: val }));\n    this.mesh.material.color.set(parseInt(val, 16));\n    //this.updateUserData();\n    this.mesh.userData.color = val;\n\n  }\n\n  changeCollider = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ collider: val }));\n    if(val==='1') {\n      this.setState(state => ({ buffer: '0' }));\n    }\n    else {\n      this.setState(state => ({ buffer: '1' }));\n    }\n   \n\n    this.mesh.material.wireframe = (val=='1') ? true: false;\n    \n    this.mesh.material.needsUpdate = true;\n    //this.updateUserData();\n    this.mesh.userData.collider = val;\n\n  }\n\n  changeWireframe = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ wireframe: val }));\n      \n\n    this.mesh.material.wireframe = (val==='1' || this.state.collider=='1') ? true: false;\n    \n    this.mesh.material.needsUpdate = true;\n    //this.updateUserData();\n    this.mesh.userData.wireframe = val;\n\n  }\n\n  changeOpacity = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ opacity: val }));\n    this.mesh.material.opacity = val;\n    //this.updateUserData();\n    this.mesh.userData.opacity = val;\n\n  }\n\n  \n\n  changePosX = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ pos: [val, this.state.pos[1], this.state.pos[2]] }));\n    this.mesh.position.x = val;\n    //this.updateUserData();\n    this.mesh.userData.pos[0] = val;\n\n  }\n\n  changePosY = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ pos: [this.state.pos[0], val, this.state.pos[2]] }));\n    this.mesh.position.z = val;\n    //this.updateUserData();\n    this.mesh.userData.pos[1] = val;\n\n  }\n\n  changePosZ = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ pos: [this.state.pos[0], this.state.pos[1], val] }));\n    this.mesh.position.y = val;\n    //this.updateUserData();\n    this.mesh.userData.pos[2] = val;\n\n  }\n\n  changeRotX = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ rot: [val, this.state.rot[1], this.state.rot[2]] }));\n    this.mesh.rotation.x = val;\n    //this.updateUserData();\n    this.mesh.userData.rot[0] = val;\n\n  }\n\n  changeRotY = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ pos: [this.state.rot[0], val, this.state.rot[2]] }));\n    this.mesh.rotation.y = val;\n    //this.updateUserData();\n    this.mesh.userData.rot[1] = val;\n\n  }\n\n  changeRotZ = (event) => {\n    let val = event.target.value;\n    this.setState(state => ({ pos: [this.state.rot[0], this.state.rot[1], val] }));\n    this.mesh.rotation.z = val;\n    //this.updateUserData();\n    this.mesh.userData.rot[2] = val;\n  }\n\n  \n  render() {\n    //console.log(this.state.transparent);\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>{this.mesh.name}</Col>\n            <Col>  <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>Options</Button></Col>\n          </Row>\n        </Container>\n\n        <Collapse isOpen={this.state.collapse}>\n          <Card>\n            <CardBody>\n              <Form>\n                <FormGroup>\n                  <Label for=\"scale\">Scale</Label>\n                  <Input name=\"scale\" id=\"scale\" value={this.state.scale} onChange={this.changeScale} />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"buffer\">BufferGeometry</Label>\n                  <Input type=\"select\" name=\"buffer\" id=\"buffer\" onChange={this.changeBuffer}>\n                    <option  selected={this.state.buffer=='1'}>1</option>\n                    <option  selected={this.state.buffer=='0'}>0</option>\n\n\n                  </Input>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"side\">Face Side</Label>\n                  <Input type=\"select\" name=\"side\" id=\"side\" onChange={this.changeSide}>\n                    <option>0</option>\n                    <option>1</option>\n                    <option>2</option>\n                  </Input>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"shadows\">Floor (shadows)</Label>\n                  <Input type=\"select\" name=\"shadows\" id=\"shadows\" onChange={this.changeShadows}>\n                    <option>0</option>\n                    <option>1</option>\n                  </Input>\n                </FormGroup>\n\n\n                <FormGroup>\n                  <Label for=\"map\">Diffuse map</Label>\n                  <Input type=\"file\" name=\"map\" id=\"map\" onChange={this.changeMap} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"alpha\">Alpha map</Label>\n                  <Input type=\"file\" name=\"alpha\" id=\"alpha\" onChange={this.changeAlpha} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"light\">Light map</Label>\n                  <Input type=\"file\" name=\"light\" id=\"light\" onChange={this.changeLightMap} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"alphaTest\">alphaTest</Label>\n                  <Input name=\"alphaTest\" id=\"alphaTest\" value={this.state.alphaTest} onChange={this.changeAlphaTest} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"transparent\">Transparent</Label>\n                  <Input type=\"select\" name=\"transparent\" id=\"transparent\" onChange={this.changeTransparent}>\n                    <option selected={this.state.transparent=='0'}>0</option>\n                    <option  selected={this.state.transparent=='1'}>1</option>\n                  </Input>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"opacity\">Opacity</Label>\n                  <Input name=\"scale\" id=\"scale\" value={this.state.opacity} onChange={this.changeOpacity} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"color\">Color</Label>\n                  <Input name=\"color\" id=\"color\" value={this.state.color} onChange={this.changeColor} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"collider\">Collider</Label>\n                  <Input type=\"select\" name=\"collider\" id=\"collider\" onChange={this.changeCollider}>\n                    <option>0</option>\n                    <option>1</option>\n                  </Input>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"wireframe\">Wireframe</Label>\n                  <Input type=\"select\" name=\"wireframe\" id=\"wireframe\" onChange={this.changeWireframe}>\n                    <option>0</option>\n                    <option>1</option>\n                  </Input>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"pos\">Position</Label>\n                  <Input name=\"posX\" id=\"posX\" value={this.state.pos[0]} onChange={this.changePosX} />\n                  <Input name=\"posY\" id=\"posY\" value={this.state.pos[1]} onChange={this.changePosY} />\n                  <Input name=\"posZ\" id=\"posZ\" value={this.state.pos[2]} onChange={this.changePosZ} />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"pos\">Rotation</Label>\n                  <Input name=\"rotX\" id=\"rotX\" value={this.state.rot[0]} onChange={this.changeRotX} />\n                  <Input name=\"rotY\" id=\"rotY\" value={this.state.rot[1]} onChange={this.changeRotY} />\n                  <Input name=\"rotZ\" id=\"rotZ\" value={this.state.rot[2]} onChange={this.changeRotZ} />\n                </FormGroup>\n\n               \n\n              </Form>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n      </div>\n    )\n  }\n}\n\nexport default ObjectUI;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ObjectUI from './ObjectUI';\nimport * as BABYLON from \"babylon\";\nimport * as OBJLoader from 'babylon-obj-loader';\nimport * as ColladaLoader from 'babylon-collada-loader';\nimport './index.css';\nOBJLoader(BABYLON);\nColladaLoader(BABYLON);\n\nclass ImportOBJ extends Component {\n    constructor({ scene }) {\n        super();\n\n        this.scene = scene;\n      \n    }\n\n    toggle = (event) => {\n        //console.log(event);\n        var file = event.target.files[0];\n        var filename = file.name;\n        var extension = filename.split('.').pop().toLowerCase();\n        var reader = new FileReader();\n        //console.log(this.scene);\n\n        switch (extension) {\n            case 'dae':\n\n                reader.addEventListener('load', (event) => {\n\n                    var contents = event.target.result;\n                    this.BABYLON = BABYLON;\n\n                    var loader = new ColladaLoader();\n                    var collada = loader.parse(contents);\n\n                    collada.scene.name = filename;\n                    //this.scene.add(collada.scene);\n                    for (let i in collada.scene.children) {\n                        collada.scene.children[i].children[0].material = new BABYLON.MeshBasicMaterial();\n                        collada.scene.children[i].children[0].name =  collada.scene.children[i].name;\n                        collada.scene.children[i].children[0].position.copy(collada.scene.children[i].position);\n                        collada.scene.children[i].children[0].rotation.copy(collada.scene.children[i].rotation);\n                        this.scene.add(collada.scene.children[i].children[0]);\n                    }\n                    //console.log(collada.scene.children);\n                   \n                        ReactDOM.render(\n                            <div>\n                                {\n                                     this.scene.children.map((mesh) => {\n                                       \n                                        return (<ObjectUI key={mesh.uuid} mesh={mesh} />);\n                                    })\n                                }\n                            </div>, document.getElementById(\"ui\"));\n\n                  \n\n                }, false);\n\n                reader.readAsText(file);\n\n                break;\n\n            case 'obj':\n\n                reader.addEventListener('load', (event) => {\n\n                    var contents = event.target.result;\n                    //console.log( BABYLON.OBJLoader );\n                    this.BABYLON = BABYLON;\n                    var object = new this.BABYLON.OBJLoader().parse(contents);\n                    object.name = filename;\n\n                    //this.scene.add(object);\n                    //console.log(object);\n\n                    for (let i in object.children) {\n                        object.children[i].material = new BABYLON.MeshBasicMaterial();\n                        this.scene.add(object.children[i]);\n                    }\n                    ReactDOM.render(\n                        <div>\n                            {\n                                 this.scene.children.map((mesh) => {\n                                   \n                                    return (<ObjectUI key={mesh.uuid} mesh={mesh} />);\n                                })\n                            }\n                        </div>, document.getElementById(\"ui\"));\n\n                    //console.log(object);\n\n                }, false);\n                reader.readAsText(file);\n\n                break;\n                default:\n                    console.log('bad format');\n                    break;\n        }\n    }\n\n    render() {\n        return (\n            <label>Import<input type=\"file\" name=\"file\" onChange={this.toggle} className=\"hidden\" /></label>\n\n        )\n    }\n}\n\nexport default ImportOBJ;\n\n\n","import React, { Component } from \"react\";\nimport JSZip from \"jszip\";\nimport * as BABYLON from \"babylon\";\nimport { saveAs } from '@progress/kendo-file-saver';\n\nclass ExportScene extends Component {\n    constructor({ scene }) {\n        super();\n\n        this.scene = scene;\n\n    }\n\n    toggle = (event) => {\n        let zip = new JSZip();\n        let textures = zip.folder(\"textures\");\n        let locTextures = textures.folder('loc');\n        let geometry = zip.folder(\"geometry\");\n        let locGeometry = geometry.folder(\"loc\");\n\n\n        let assets = {};\n        let obj = [];\n        let locations = {\n            obj: obj,\n            z: 20\n        };\n        let imgList = [];\n        for (let i in this.scene.children) {\n            let mesh = this.scene.children[i];\n            let data = mesh.userData;\n            let asset = {};\n            asset.scale = data.scale;\n            asset.geo = mesh.name + '.js';\n            asset.buffer = data.buffer === '1' ? true : false;\n            //console.log(data.map);\n            if (data.map) {\n                asset.map = data.map;\n                if (imgList.indexOf(data.map) === -1) {\n                    imgList.push(data.map);\n                    let img = mesh.material.map.image.src.split(',');\n                    locTextures.file(data.map, img[1], { base64: true });\n                }\n\n            }\n\n            if (data.alpha) {\n                asset.alpha = data.alpha;\n                if (imgList.indexOf(data.alpha) === -1) {\n                    imgList.push(data.alpha);\n                    let img = mesh.material.alphaMap.image.src.split(',');\n                    locTextures.file(data.alpha, img[1], { base64: true });\n                }\n            }\n\n            if (data.lightmap) {\n                asset.lightmap = data.lightmap;\n                if (imgList.indexOf(data.lightmap) === -1) {\n                    imgList.push(data.lightmap);\n                    let img = mesh.material.lightMap.image.src.split(',');\n                    locTextures.file(data.lightmap, img[1], { base64: true });\n                }\n            }\n\n            asset.side = parseInt(data.side);\n            if (data.shadows === '1') {\n                asset.shadows = true;\n            }\n\n            if (data.alphaTest > 0) {\n                asset.alphaTest = data.alphaTest;\n            }\n            if (data.transparent === '1') {\n                asset.transparent = true;\n            }\n\n            asset.opacity = data.opacity;\n\n            asset.color = parseInt(data.color, '16');\n            if (data.collider === '1') {\n                asset.collider = true;\n            }\n\n            if (data.wirframe === '1') {\n                asset.wirframe = true;\n            }\n\n            asset.pos = data.pos;\n            asset.rot = data.rot;\n\n            assets[mesh.name] = asset;\n            obj.push({ id: mesh.name });\n\n            let geo;\n            if (mesh.geometry.type === 'BufferGeometry') {\n                geo = new BABYLON.Geometry();\n                geo.fromBufferGeometry(mesh.geometry);\n            }\n            else {\n                geo = mesh.geometry;\n            }\n\n            locGeometry.file(mesh.name + '.js', JSON.stringify(geo.toJSON().data));\n\n\n\n        }\n        zip.file('assets.js', JSON.stringify(assets));\n        zip.file('locations.js', JSON.stringify(locations));\n\n        zip.generateAsync({ type: \"blob\" })\n            .then(function (content) {\n                saveAs(content, \"export.zip\");\n\n            });\n\n\n    }\n\n    render() {\n        return (<div onClick={this.toggle} > Export </div>\n\n        )\n    }\n}\n\nexport default ExportScene;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass ResetScene extends Component {\n    constructor({ scene }) {\n        super();\n\n        this.scene = scene;\n\n    }\n\n    toggle = (event) => {\n        ReactDOM.render(<div></div>, document.getElementById(\"ui\"));\n        this.scene.children = [];\n\n    }\n\n    render() {\n        return ( <div onClick ={this.toggle} >Reset</div>\n\n        )\n    }\n}\n\nexport default ResetScene;","import React,  { Component}  from \"react\"; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ImportOBJ from \"./ImportOBJ\";\nimport ExportScene from \"./ExportScene\";\nimport ResetScene from \"./ResetScene\"\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink\n    } from 'reactstrap';\n\nclass Menu extends Component {\n    constructor({scene}) {\n      super();\n      this.state = {\n        importDropdownOpen: false\n      };\n      this.scene = scene;\n      \n    }\n\n    importOBJ = ()  => {\n        console.log('import obj');\n    }\n\n    importDAE = () => {\n        console.log('import DAE');\n    }\n\n    toggle = ()  => {\n        this.setState({\n            isOpen: !this.state.isOpen\n          });\n      }\n\n    render() {\n      return (\n          <div>\n          <Navbar color=\"light\" light expand=\"md\">\n          \n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                \n              <NavItem>\n                  <NavLink>  <ImportOBJ scene={this.scene}  /></NavLink>\n                </NavItem>\n\n\n                <NavItem>\n                  <NavLink ><ExportScene scene={this.scene}  /></NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink ><ResetScene scene={this.scene}  /></NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      )\n    }\n}\n  \nexport default Menu;\n","import React, { Component}  from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport * as BABYLON from \"babylon\";\nimport  Menu from './Menu';\n\n\n\n\nconst OrbitControls = require(\"babylon-orbit-controls\")(BABYLON);\n\n\nvar scene = new BABYLON.Scene(), objectGroup = new BABYLON.Group();\nscene.add(objectGroup);\n\nclass App extends Component {\n    componentDidMount() {\n      var camera = new BABYLON.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 1, 30000 );\n      this.camera = camera;\n      var renderer = new BABYLON.WebGLRenderer();\n      this.renderer = renderer;\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      this.mount.appendChild( renderer.domElement );\n     \n      camera.position.z = 150;\n      camera.position.y = 150;\n      var size = 2500,\n      step = 50;\n      var geometry = new BABYLON.Geometry();\n     for (var i = -size; i <= size; i += step) {\n         geometry.vertices.push(new BABYLON.Vector3(-size, 0, i));\n         geometry.vertices.push(new BABYLON.Vector3(size, 0, i));\n         geometry.vertices.push(new BABYLON.Vector3(i, 0, -size));\n         geometry.vertices.push(new BABYLON.Vector3(i, 0, size));\n     }\n     var material = new BABYLON.LineBasicMaterial({ color: 0xffffff, opacity: 0.5, transparent: true });\n     var line = new BABYLON.LineSegments(geometry, material);\n     scene.add(line);\n\n      var animate = function () {\n        requestAnimationFrame( animate );\n       \n        renderer.render( scene, camera );\n      };\n      const controls = new OrbitControls( camera, renderer.domElement );\n      window.addEventListener('resize', this.onWindowResize, false);\n      animate();\n    }\n\n    onWindowResize = () =>{\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    render() {\n      return (\n        <div ref={ref => (this.mount = ref)} />\n      )\n    }\n  }\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nReactDOM.render(<Menu scene={objectGroup} />, document.getElementById(\"menu\"));\n"],"sourceRoot":""}